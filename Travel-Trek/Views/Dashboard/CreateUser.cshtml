@model Travel_Trek.ViewModels.AddUserViewModel
@{
    ViewBag.Title = "Create User";
    Layout = "~/Views/Shared/DashboardLayout.cshtml";
}

<h2>Create New User</h2>
<hr />
@using (Ajax.BeginForm("CreateNewUser", "Dashboard", null, new AjaxOptions() { HttpMethod = "POST", OnSuccess = "InformUser" }, new
{
    enctype = "multipart/form-data",
    id = "formData"
}))
{
    <div class="form-horizontal">

        <div class="row">
            <p class="col-12 Header_subtitle">Please fill the following form to create new user. 🤷‍♂️✌</p>

        </div>

        @Html.ValidationSummary(true, "Please fix the the following errors!", new { @class = "text-danger" })
        <div class="row">
            <div class="form-group col-lg-6 col-md-6 col-sm-12">
                @Html.LabelFor(model => model.Person.FirstName, new { @class = "font-weight-bold" })
                <div>
                    @Html.EditorFor(model => model.Person.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Person.FirstName, null, new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-lg-6 col-md-6 col-sm-12">
                @Html.LabelFor(model => model.Person.LastName, new { @class = "font-weight-bold" })
                <div>
                    @Html.EditorFor(model => model.Person.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Person.LastName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="form-group col-lg-6 col-md-6 col-sm-12">
                @Html.LabelFor(model => model.Person.Email, new { @class = "font-weight-bold" })
                <div>
                    @Html.EditorFor(model => model.Person.Email, new { htmlAttributes = new { @class = "form-control", id = "emailText", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Person.Email, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-lg-6 col-md-6 col-sm-12">
                @Html.LabelFor(model => model.Person.Password, new { @class = "font-weight-bold" })
                <div>
                    @Html.EditorFor(model => model.Person.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Person.Password, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group col-lg-6 col-md-6 col-sm-12">
                @Html.LabelFor(model => model.Person.PhoneNumber, new { @class = "font-weight-bold" })
                <div>
                    @Html.EditorFor(model => model.Person.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Person.PhoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-lg-6 col-md-6 col-sm-12">
                @Html.LabelFor(model => model.Person.Photo, new { @class = "font-weight-bold" })
                <br />
                <div class="custom-file " style="width:auto;">
                    <input type="file" name="userPhoto" class="custom-file-input" id="customFile">
                    <label class="custom-file-label" for="customFile">Choose user image</label>
                    @Html.ValidationMessageFor(model => model.Person.Photo, "", new { @class = "text-danger" })

                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-6 col-md-6 col-sm-12">
                <div class="form-group">
                    @Html.LabelFor(m => m.Person.UserRoleId, new { @class = "font-weight-bold" })
                    @Html.DropDownListFor(m => m.Person.UserRoleId, new SelectList(Model.UserRoles, "id", "Name"), "Select user role", new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Person.UserRoleId)
                </div>
            </div>
        </div>

        @Html.AntiForgeryToken()
        <div class="row">
            <div class="form-group col-lg-6 col-md-6 col-sm-12">
                <div>
                    <input type="submit" value="Create User" class="btn btn-primary" />
                </div>
            </div>
        </div>
    </div>
}

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        /* This method will be called after success of the ajax request */
        function InformUser(data) {

            console.log(data);
            
            if (data.success) {
                console.log("Success!");

                var dialog = bootbox.dialog({
                    title: "Create User🐱‍🏍",
                    message: '<p><i class="fa fa-spin fa-spinner"></i> Processing 👀...</p>',
                    backdrop: true,
                    buttons: {
                        Ok: {
                            label: "Ok",
                            className: 'btn-success'
                        }
                    }
                });

                dialog.init(function () {
                    setTimeout(function () {
                        //* Target the dialog body and put the success msg
                        dialog.find('.bootbox-body').html(data.message);
                        dialog.closeButton = true;
                        //* Target the form and empty it
                        document.getElementById("formData").reset();
                    },
                        1000);
                });

            } else {
                bootbox.alert(data.message);
            }
        };

    </script>
}