@model Travel_Trek.ViewModels.WallViewModel

@{
    ViewBag.Title = "Profile";
    var layout = Model.Layout;
    Layout = "~/Views/Shared/" + layout;
    var password = Model.User.Password;
}

<section>

    <h2>@Model.Title Information 👨🏻</h2>
    <hr />
    @using (Ajax.BeginForm("Save", @Model.Controller, null, new AjaxOptions() { HttpMethod = "POST", OnSuccess = "InformUser" }, new
    {
        enctype = "multipart/form-data",
        id = "formData"
    }))
    {
        <div class="form-horizontal">

            <div class="Header_subtitle">
                <p>You can edit your data, then click update. 🤷‍♂️✌</p>
            </div>

            @Html.ValidationSummary(true, "Please fix the the following errors!", new { @class = "text-danger" })
            <div class="row">
                <div class="form-group col-lg-6 col-md-6  col-sm-12">
                    @Html.LabelFor(model => model.User.FirstName, new { @class = "font-weight-bold" })
                    <div>
                        @Html.EditorFor(model => model.User.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.User.FirstName, null, new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-lg-6 col-md-6  col-sm-12">
                    @Html.LabelFor(model => model.User.LastName, new { @class = "font-weight-bold" })
                    <div>
                        @Html.EditorFor(model => model.User.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.User.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="form-group col-lg-6 col-md-6  col-sm-12">
                    @Html.LabelFor(model => model.User.Email, new { @class = "font-weight-bold" })
                    <div>
                        @Html.EditorFor(model => model.User.Email, new { htmlAttributes = new { @class = "form-control", id = "emailText", disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.User.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-lg-6 col-md-6  col-sm-12">
                    @Html.LabelFor(model => model.User.Password, new { @class = "font-weight-bold" })
                    <div>
                        <!--Html.EditorFor(model => model.User.Password, new { htmlAttributes = new { class = "form-control", id = "change", disabled = "disabled", value = password } })-->
                        @Html.EditorFor(model => model.User.Password, new { htmlAttributes = new { @class = "form-control" ,value = password } })
                        @Html.ValidationMessageFor(model => model.User.Password, "", new { @class = "text-danger" })
                    </div>
                    <!-- <a href="#" class="btn btn-primary changeBtn" style="margin-top: 5px;">Change password</a> -->
                </div>
            </div>
            <div class="row">
                <div class="form-group col-lg-6 col-md-6  col-sm-12">
                    @Html.LabelFor(model => model.User.PhoneNumber, new { @class = "font-weight-bold" })
                    <div>
                        @Html.EditorFor(model => model.User.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.User.PhoneNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-lg-6 col-md-6  col-sm-12">
                    @Html.LabelFor(model => model.User.Photo, new { @class = "font-weight-bold" })
                    <br />
                    <div class="custom-file " style="width:auto;">
                        <div class="custom-file">
                            <input type="file" name="userPhoto" class="custom-file-input" id="customFile">
                            <label class="custom-file-label" for="customFile">Choose user image</label>
                        </div>
                        @Html.ValidationMessageFor(model => model.User.Photo, "", new { @class = "text-danger" })

                    </div>
                </div>
            </div>

            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.User.Id)
            <div class="row">
                <div class="form-group col-lg-6 col-md-6 col-sm-12">
                    <div>
                        <input type="submit" class="btn btn-primary " value="Update Info"/>
                    </div>
                </div>
            </div>


        </div>
    }
</section>


@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        // Add the following code if you want the name of the file appear on select
        $(".custom-file-input").on("change", function () {
            var fileName = $(this).val().split("\\").pop();
            $(this).siblings(".custom-file-label").addClass("selected").html(fileName);
        });
    </script>
    
    <script>
        // Toggle the password 
        /*$(".changeBtn").on("click",
            function () {
                console.log("Clicked");
                document.getElementById("change").disabled = false;
            });*/
    </script>
    
    <script>
        /* This method will be called after success of the ajax request */
        function InformUser(data) {
            if (data.success) {
                console.log("Success!");

                var dialog = bootbox.dialog({
                    title: "Edit Profile🐱‍🏍",
                    message: '<p><i class="fa fa-spin fa-spinner"></i> Processing ⏳...</p>',
                    backdrop: true,
                    buttons: {
                        Ok: {
                            label: "Ok",
                            className: 'btn-success'
                        }
                    }
                });

                dialog.init(function () {
                    setTimeout(function () {
                            //* Target the dialog body and put the success msg
                            dialog.find('.bootbox-body').html(data.message);
                            dialog.closeButton = true;
                        },
                        1000);
                });

            } else {
                bootbox.alert(data.message);
            }

        };

    </script>
}